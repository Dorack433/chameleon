#!/bin/bash

#######################################################################################
#################################                     #################################
#################################  PRÉ-CONFIGURAÇÃO   #################################
#################################                     #################################
#######################################################################################

#              POR FAVOR, LEIA ANTES DE EXECUTAR ESTE SCRIPT!!!!
#
#
# Este script utiliza TOR GEOIP para evitar criar circuitos ou usar o mesmo país como "NÓ DE ENTRADA" e "NÓ DE SAÍDA" do TOR.
# Em outras palavras, sempre teremos "saltos" em relays de países diferentes, dificultando a correlação de eventos
# devido à alta fragmentação de requisições entre INSTÂNCIAS TOR rodando em países diferentes.
#
# Pense no esforço necessário para seu adversário comprometer um nó TOR em países divergentes como:
#    Estados Unidos, Rússia, Japão, China, Coreia do Norte, Coreia do Sul, Brasil, Suécia, Islândia, Ucrânia etc.
# Esses países têm leis e burocracias legais diferentes. A violação legal da privacidade pode não ser tão fácil.
#
# Ok, mas vamos considerar que seu adversário possa comprometer toda a REDE TOR. Agora pense no esforço necessário
# para seu adversário correlacionar todas suas requisições fragmentadas entre todas as diferentes instâncias TOR rodando em países diferentes
# e usando circuitos TOR diferentes para cada requisição. Bem... BOA SORTE GALERA! Tentem mais!
#
#
# Você pode controlar a seleção de países e isso afetará a escolha de "NÓS DE ENTRADA" ou "NÓS DE SAÍDA".
# Por padrão o script especificará os países a serem usados como NÓS DE ENTRADA e usará qualquer outro país como "NÓS DE SAÍDA"
# mas nunca usará o mesmo país que foi selecionado como NÓ DE ENTRADA.
#
# Se você precisar contornar uma proteção GeoIP, pode definir os países que serão usados como NÓS-DE-SAÍDA. Neste modo você sempre
# acessará seu alvo usando IPs dos países específicos.
#
# Se você realmente precisa de uma conexão RÁPIDA, pode forçar o SCRIPT a usar o MESMO PAÍS para todos os saltos da REDE TOR.
# Isso significa que o script criará a INSTÂNCIA TOR USANDO o MESMO PAÍS como NÓ DE ENTRADA, "NÓ INTERNO DE SALTO TOR" e NÓ DE SAÍDA.
# Em resumo, você está reduzindo o ATRASO entre os saltos e garantindo o MELHOR DESEMPENHO DE VELOCIDADE da instância TOR.
# CUIDADO! Esta opção não é considerada segura, porque seu adversário pode COMPROMETER o nó de entrada e o nó de saída e correlacionar seu
# tráfego de internet. Por outro lado, você pode usar um alto número de PAÍSES para reduzir a quantidade de dados que seu adversário poderá coletar.
#
# As opções disponíveis são:
#  1) entry:     Esta é a opção padrão e a melhor abordagem para segurança e anonimato.
#                      O algoritmo de balanceamento de carga para esta opção é: Round Robin Estático.
#
#  2) exit :     Esta opção é BOA para contornar proteções GeoIP. Mas reduz o número de NÓS DE SAÍDA que o TOR pode usar. Repete o mesmo nó de saída.
#                      O algoritmo de balanceamento de carga para esta opção é: Round Robin Estático.
#
#  3) speed:  Esta opção é a MAIS RÁPIDA mas reduz a segurança.
#                      Tenha cuidado e tente usar um ALTO NÚMERO DE PAÍSES se habilitar esta.
#                      O algoritmo de balanceamento de carga para esta opção é: Round Robin de Menos Conexões.
#                      Esta opção é boa para downloads ou streaming de mídia, mas não é recomendada para TESTES DE PENETRAÇÃO.
#                      Além disso, alguns países não têm GUARDS DE ENTRADA e NÓS DE SAÍDA suficientes para criar circuitos válidos. Fique de olho no
#                      monitor de status/verificação de saúde URL para detectar e evitar esses países. Por padrão a verificação de saúde é: http://127.0.0.1:3129/status
#
#  3) none:  Esta opção não altera o comportamento do TOR. O algoritmo do TOR é livre para gerar circuitos usando qualquer país da lista de PAÍSES_ACEITOS.
#
# Sobre os algoritmos de balanceamento de carga:
#    Round Robin:                   Cada INSTÂNCIA TOR é usada por vez. Se uma INSTÂNCIA TOR não tiver circuitos válidos disponíveis
#                                   o algoritmo considerará esta instância inativa e a ignorará até que tenha um circuito válido aberto e pronto para uso.
#                                   Quando a INSTÂNCIA TOR conseguir criar um circuito válido, o script o testará e o reintroduzirá imediatamente no
#                                   farm, uma vez que o mapa completo seja recalculado.
#
#    Round Robin de Menos Conexões: A INSTÂNCIA TOR com menor número de conexões recebe a próxima conexão.
#                                   Round-robin é realizado para garantir que todos os servidores serão usados, mas as INSTÂNCIAS TOR mais rápidas podem receber
#                                   e processar mais requisições que as mais lentas. Isso aumenta as chances de você usar um circuito TOR comprometido ou, no caso
#                                   de testes de penetração, ser detectado por SISTEMAS DE PREVENÇÃO DE INTRUSÃO porque você pode ACESSAR seu alvo mais vezes com o
#                                   mesmo endereço IP, permitindo que o IPS correlacione o comportamento e detecte seu ataque.
#

#Países Aceitos com (SAÍDA) e (GUARDS DE ENTRADA) podem ser usados para forçar entrada ou saída:
#Fonte: https://metrics.torproject.org/rs.html#aggregate/cc (Atualizado em 2023)
#Critérios: flag:valid flag:exit flag:guard flag:fast
###
# Top 20 países com melhor infraestrutura TOR (ENTRY + EXIT)
# País          Relés  Guards  Saídas  Banda (MiB/s)  Peso
# Alemanha      1598   1120    297     33844,18       29,9772%
# Holanda       866    521     473     18852,43       17,7821%
# Estados Unidos2464   1779    433     26511,59       13,0338%
# Suécia        488    278     306     9639,92        7,9109%
# França        323    274     70      6006,56        5,2324%
# Polônia       398    264     287     4529,81        2,9518%
# Áustria       203    32      107     2951,90        2,5503%
# Suíça         138    111     31      2356,89        1,8906%
# Finlândia     182    139     8       3695,51        2,9624%
# Reino Unido   225    119     14      2910,97        2,4875%
# Rússia        134    102     59      2129,22        1,5114%
# República Tcheca 84  68      13      1729,27        1,4946%
# Luxemburgo    113    31      93      1221,02        0,9910%
# Dinamarca     47     36      14      947,08         0,8125%
# Romênia       145    100     78      1272,67        0,6857%
# Itália        86     63      12      1180,83        0,8800%
# Bélgica       26     17      1       617,24         0,6472%
# Espanha       77     49      2       899,60         0,5815%
# Noruega       45     38      3       727,94         0,5482%
# Canadá        191    137     8       1338,47        0,5073%
###

MY_COUNTRY_LIST="RANDOM"

# Lista otimizada considerando países com:
# 1) Boa infraestrutura TOR (muitos relays)
# 2) Alta velocidade de banda
# 3) Disponibilidade tanto de ENTRY GUARDS quanto EXIT nodes
EXIT_COUNTRIES="{de},{nl},{us},{se},{pl},{at},{fr},{ch},{fi},{ro},{dk},{be},{es},{no},{ca}"

ACCEPTED_COUNTRIES="{de},{nl},{us},{se},{fr},{pl},{at},{ch},{fi},{gb},{ru},{cz},{lu},{dk},{ro},{it},{be},{es},{no},{ca}"

ENTRY_COUNTRIES="{de},{nl},{us},{se},{fr},{pl},{at},{ch},{fi},{gb},{ru},{cz},{lu},{dk},{ro},{it},{be},{es},{no},{ca}"

# Lista negra - países com pouca infraestrutura ou problemas de privacidade
BLACKLIST_COUNTRIES="{ph},{mu},{kh},{sa},{ae},{mn},{az},{gh},{vn},{ec},{ke},{ar},{mt},{kg},{eg},{ve},{ge},{id},{kr},{ng},{mk},{pk},{tw},{th},{rs},{kz},{eu},{si},{ly},{cl},{tr},{in},{sk},{ba},{br},{mc},{al},{my},{sg},{za},{jp},{hk},{co},{tr},{uy},{pa},{cr},{do},{pe},{ec},{py},{bo},{sv},{gt},{hn},{ni}"

# Esta opção manterá na tela a lista atual de países que estão em uso.
# O status mostra os seguintes detalhes:
# <PID_PROCESSO_TOR>, <NÚMERO_INSTÂNCIA_TOR>, <PAÍS_ATUAL>, <ARQUIVO_CONFIG_TOR>
# Exemplo de Saída:
#       _14744,1,{se},/tmp/chameleon/tor1/tor_1.cfg
#       _12594,2,{ca},/tmp/chameleon/tor2/tor_2.cfg
#       _13334,3,{at},/tmp/chameleon/tor3/tor_3.cfg
SHOW_STATUS="yes"

# Você precisa definir a opção de proxy upstream. Todas as conexões TOR serão criadas usando este PROXY.
# Se você deixar esta opção vazia, o PROXY UPSTREAM não será usado.
# Formato Esperado: IP:PORTA
# Exemplo: 172.17.0.1:63541
# O Tor fará todas suas conexões OR (SSL) através deste host:porta (ou host:443 se a porta não for especificada), via HTTP CONNECT em vez de conectar diretamente aos servidores.
# Você pode querer definir FascistFirewall para restringir o conjunto de portas que você pode tentar conectar, se seu proxy HTTPS só permitir conexão a certas portas.
UPSTREAM_CHAMELEON_NETWORK_PROXY=""

# PROXY UPSTREAM: Autenticação
# Se definido, o Tor usará este usuário:senha para autenticação básica de proxy HTTPS, como no RFC 2617. Esta é atualmente a única forma de autenticação de proxy HTTPS que o Tor suporta
# Formato esperado:
# usuário:senha
# Se você deixar esta opção vazia, a autenticação não será usada para acessar seu proxy upstream.
UPSTREAM_CHAMELEON_NETWORK_PROXY_AUTH=""


# Para aumentar a segurança, por padrão este script mudará o país relacionado com a INSTÂNCIA TOR.
# É uma boa estratégia para reduzir ainda mais as chances de continuar usando o mesmo RELAY TOR comprometido.
# Em resumo, esta opção reduzirá ainda mais a quantidade total de dados que seu adversário poderá coletar em seu RELAY TOR comprometido.
# Defina esta opção como "NÃO" se você não espera mudar os países. É útil para casos específicos de bypass GeoIP.
CHANGE_COUNTRY_ONTHEFLY="YES"

# Seleciona um país aleatório e muda todas as instâncias relacionadas a este país a cada "X" segundos.
# Esta opção define o atraso em segundos entre as mudanças de países.
# O script selecionará uma instância aleatória e mudará o país atual desta instância selecionando um país aleatório de sua "LISTA DE PAÍSES ACEITOS".
# Isso reduz ainda mais as chances de seu adversário interceptar e correlacionar suas ações, porque definirá um país diferente para os novos circuitos.
# O script mudará apenas 1 instância por vez, respeitando o atraso desta opção.
# Considerando que cada instância já está mudando o circuito a cada 10 segundos. Você pode considerar um valor mínimo para esta opção como 30 segundos.
# Isso fará com que o script use o mesmo país pelo menos 3 vezes antes de mudar para outro país.
# Não defina um número menor que 180 segundos. O TOR precisa de pelo menos 40 segundos para iniciar uma nova INSTÂNCIA TOR
CHANGE_COUNTRY_INTERVAL="200"
KEEP_SAME_COUNTRY_FOR_AT_LEAST="170"
SAME_TIME_CHANGING_LIMIT="3"
SHOW_CURRENT_INSTANCE_STATUS_EVERY="215"

# Número de vezes que o script tentará conectar e enviar sua requisição.
# Ele tentará a requisição este número de vezes para cada INSTÂNCIA TOR até obter sucesso.
RETRIES="10"

# Tempo limite de requisição HTTP do BalanceadorDeCarga --> TOR --> Seu Servidor Alvo
# Sugestão: Não defina menor que 10 segundos. Eu sugeriria 30 segundos.
MINIMUM_TIMEOUT="15"

# Tempo limite de requisição DNS do TOR. Padrão 3 segundos
DNS_TIMEOUT="4"

# Máximo de Conexões Concorrentes por INSTÂNCIA TOR
# Por padrão Este script está usando 20.
MAX_CONCURRENT_REQUEST="20"

# Primeira porta sock para vincular. O script aumentará este número para cada instância.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
# Em outras palavras, se você estiver executando 7 instâncias em 7 países diferentes, você terá 49 instâncias e quantidade total de portas
# considerando as configurações padrão é: (7x7=49 instâncias) --> 8.999+49(instâncias) = 9.048
# Considerando o exemplo anterior, você deve verificar se todas as portas entre 8.999 e 9.048 estão livres!
START_SOCKS_PORT="4999"

# Primeira porta de controle para vincular. O script aumentará este número para cada instância.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
# Em outras palavras, se você estiver executando 7 instâncias em 7 países diferentes, você terá 49 instâncias e quantidade total de portas
# considerando as configurações padrão é: (7x7=49 instâncias) --> 4.999+49(instâncias) = 5.048
# Considerando o exemplo anterior, você deve verificar se todas as portas entre 4.999 e 5.048 estão livres!
START_CONTROL_PORT="5999"


# Primeira porta DNS local para vincular. O script aumentará este número para cada instância.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
START_DNS_PORT="5299"

# Primeira porta HTTP local para vincular. O script aumentará este número para cada instância.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
TOR_START_HTTP_PORT="5199"

# Primeira porta de Proxy Transparente local para vincular. O script aumentará este número para cada instância.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
TOR_START_TransPort="5099"

# Captura o caminho do binário TOR
#CAMINHO_TOR="/usr/local/bin/tor"
TORPATH="/usr/sbin/tor"

# Caminho do Binário HAPROXY
HAPROXY_PATH="/usr/sbin/haproxy"

# Captura o usuário logado
ID_USUARIO=$(id | cut -d ")" -f 1 | cut -d "(" -f 2)
UID_USUARIO=$(id | sed "s|(|\n|g" | sed "s|) |\n|g" | grep "=" | grep "uid" | cut -d "=" -f 2)
GID_USUARIO=$(id | sed "s|(|\n|g" | sed "s|) |\n|g" | grep "=" | grep "gid" | cut -d "=" -f 2)

# CUIDADO! CUIDADO! CUIDADO!!!
# Este diretório será completamente deletado se já existir!
# Por padrão o script manterá todos os arquivos temporários e de configuração dentro de /tmp/ramdon_tor.
# Mesmo dentro do diretório /tmp, este script definirá as permissões neste diretório APENAS para o root e o usuário atual.
TOR_TEMP_FILES="/tmp/chameleon"

# Define os sockets TOR para escutar apenas no localhost
LISTEN_ADDR="127.0.0.1"

# Escuta do Servidor DNSDist (Balanceador de DNS)
DNSDIST_SERVER_LISTEN="0.0.0.0"

# Porta do Balanceador de DNS
DNSDIST_SERVER_PORT="5353"

# Define o DNS TOR para escutar apenas no localhost
TOR_DNS_LISTEN="127.0.0.1"

# Por padrão os logs estão desabilitados! Sem logs, sem crime!
# Se você quiser habilitar logs para fins de depuração, localize nas linhas abaixo e remova o comentário.
LOGDIR="${TOR_TEMP_FILES}"

# Por padrão os logs estão desabilitados! Sem logs, sem crime!
# Se você quiser habilitar logs para fins de depuração, localize nas linhas abaixo e remova o comentário.
LOGNAME="tor_log_"

# Gera uma string aleatória para usar como senha de controle do TOR e senha de estatísticas do HAPROXY.
RAND_PASS=$(dd if=/dev/urandom bs=40 count=1 2> /dev/null | base64)

# Usando TOR para HASH da SENHA_ALEATORIA gerada anteriormente.
TORPASS=$($TORPATH --hash-password "${RAND_PASS}"|grep "16:")

# Define o caminho do binário PRIVOXY
PRIVOXY_PATH="/usr/sbin/privoxy"

# Define o caminho para o arquivo de configuração do PRIVOXY!
# Este script criará o arquivo de configuração e executará o PRIVOXY usando esta configuração.
PRIVOXY_FILE="${TOR_TEMP_FILES}/privoxy_chameleon_config_"

# Define o caminho para o arquivo de configuração do HAPROXY!
# Este script criará o arquivo de configuração e executará o HAPROXY usando esta configuração.
MASTER_PROXY_CFG="${TOR_TEMP_FILES}/chameleon_master_proxy.cfg"

# Define o PRIVOXY para escutar apenas no localhost.
# Se você quiser compartilhar sua conexão TOR ALEATÓRIA com todos, defina como 127.0.0.1
PRIVOXY_LISTEN="127.0.0.1"

# Define o HAPROXY para escutar apenas no localhost.
# Se você quiser compartilhar sua conexão TOR ALEATÓRIA com todos, defina como 127.0.0.1
MASTER_PROXY_LISTEN="0.0.0.0"

# Define qual porta o HAPROXY vinculará para conexões HTTP de clientes.
# Você usará esta mesma porta nas configurações de proxy do seu navegador.
MASTER_PROXY_SOCKS_PORT="63536"

# Define qual porta o HAPROXY vinculará para conexões HTTP de clientes.
# Você usará esta mesma porta nas configurações de proxy do seu navegador.
MASTER_PROXY_HTTP_PORT="63537"

# Define qual porta o HAPROXY vinculará para conexões HTTP de clientes.
# Você usará esta mesma porta nas configurações de proxy do seu navegador.
MASTER_PROXY_TRANSPARENT_PORT="63538"

# Define o STATUS do PROXY MASTER para escutar apenas no localhost.
MASTER_PROXY_STAT_LISTEN="0.0.0.0"

# Define a porta de estatísticas para HAPROXY.
# Você pode conectar a esta porta para verificar as estatísticas sobre os PAÍSES
MASTER_PROXY_STAT_PORT="63539"

# Define o URI de estatísticas do HAPROXY
# Você pode acessar a página de status usando:
MASTER_PROXY_STAT_URI="/chameleon_status"

# Define a Senha de Status do PROXY MASTER
MASTER_PROXY_STAT_PWD="${RAND_PASS}"

# Define qual porta o PRIVOXY vinculará para os SUB-PROXIES ou PROXIES DE PAÍSES.
# O Proxy mestre usará este número de portas aumentadas como PROXIES DE ENCAMINHAMENTO.
# O número aumentará de acordo com o número de INSTÂNCIAS TOR em execução.
# Em outras palavras, se você estiver executando 7 instâncias em 7 países diferentes, você terá 49 instâncias e quantidade total de portas
# considerando as configurações padrão é: (7x7=49 instâncias) --> 10999+49(instâncias) = 11,048
# Considerando o exemplo anterior, você deve verificar se todas as portas entre 10.999 e 11.048 estão livres!
PRIVOXY_START_PORT="6999"

# Arquivo de configuração do Proxychains.
#	O primeiro lugar onde o proxychains procurará pelo arquivo de configuração é no diretório atual.
#	O segundo lugar é dentro do diretório .proxychains localizado dentro do diretório "home" do usuário atual.
#	O terceiro lugar é o padrão /etc/proxychains.conf
# Este script assume que este diretório já existe dentro do diretório "home" do usuário.
PROXYCHAINS_FILE="${HOME}/.proxychains/proxychains.conf"

# DOMÍNIO ALVO PARA VERIFICAÇÃO DE SAÚDE DO CIRCUITO TOR
# O script tentará acessar este endereço usando TOR para verificar se o circuito TOR está vivo e não tem problemas de resolução DNS.
# Use apenas servidores com suporte HTTPS! Remova o https:// como no exemplo.
# Exemplos:
#1) URL_VERIFICACAO_SAUDE="protonirockerxow.onion"
#2) URL_VERIFICACAO_SAUDE="www.google.com"
HEALTH_CHECK_URL="www.google.com"

# Define o intervalo entre as verificações de SAÚDE.
# Padrão: INTERVALO_VERIFICACAO_SAUDE="5"
HEALTH_CHECK_INTERVAL="1"
HEALTH_CHECK_INTERVAL_SOCKS="1"

# Quantas vezes a verificação de SAÚDE pode falhar antes de considerar a INSTÂNCIA TOR INATIVA?
# Se você precisar garantir uma melhor estabilidade, mantenha este número muito baixo.
# Considere a INSTÂNCIA TOR INATIVA SE o seguinte número de requisições de verificação de SAÚDE falhar.
HEALTH_CHECK_MAX_FAIL="1"

# Quantas vezes a verificação de SAÚDE precisa ter sucesso antes de considerar a INSTÂNCIA TOR ATIVA?
# Considere a INSTÂNCIA TOR ATIVA se o seguinte número de requisições de verificação de SAÚDE tiver sucesso.
HEALTH_CHECK_MININUM_SUCESS_SOCKS="20"
HEALTH_CHECK_MININUM_SUCESS="3"

# Por favor, mantenha o valor abaixo atualizado!
# O script removerá qualquer User-Agent enviado por seu navegador ou aplicações e substituirá por este.
# O adversário pode verificar se você está usando um User-Agent diferente e identificá-lo.
# Este recurso tornará seu tráfego mais similar com todos os outros usuários TOR.
# Verifique o user agent atual do Navegador TOR e mantenha este valor atualizado.
TOR_BROWNSER_USER_AGENT="Mozilla/5.0 (Windows NT 6.1; rv:52.0) Gecko/20100101 Firefox/52.0"

# Este proxy não será usado para, por padrão o TOR não aceita estas redes:
DO_NOT_PROXY="127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,0.0.0.0/8,100.64.0.0/10,169.254.0.0/16,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,240.0.0.0/4,255.255.255.255/32"


#########################################################
################ SESSÃO DE AJUSTES DE CONFIG ################
#########################################################

# Você pode configurar quanto tempo cada "camada" de proxies deve esperar antes do timeout.
# As sugestões abaixo visam o melhor desempenho/estabilidade.
# A explicação sobre cada parâmetro é baseada na documentação original.
# Estas opções definirão as opções de ajuste do TOR.
#
#  ####################
#  #### CUIDADO!!! ####
#  ####################
#	Por favor, leia a descrição de cada opção para entender e realizar seus próprios ajustes se estiver usando uma conexão lenta de internet.
#	O uso de TOR BRIDGE derrota o propósito deste script por esta razão não estou considerando o TOR BRIDGE como uma opção para este script.
#	Além disso, a ideia principal da minha infraestrutura TOR é manter este script rodando em um VPS que usa uma VPN como gateway padrão. Em outras palavras.
#	Não é seguro conectar diretamente ao TOR sem uma conexão VPN.
# 	Todas as configurações relacionadas ao TOR estão tentando respeitar e seguir as configurações PADRÃO mas focadas em segurança.
#	Você não precisa mudar nada abaixo desta linha para ter uma boa experiência com TOR. Todas as configurações abaixo estão focadas na melhor abordagem para
#   segurança e privacidade.
############################################################################################################################

## Nível 1: Configurações TOR

#	RejeitarPortasTextoSimples		 		 --> Como AvisarPortasTextoSimples, mas em vez de avisar sobre usos arriscados de portas,
#            o Tor recusará a conexão.
#           (Padrão TOR é: Nenhum, porque eles assumem que você está executando tor com NAVEGADOR TOR com plugin
#             'HTTPS Everywhere' habilitado para bloquear sites não criptografados).
#            Sugestão: Por padrão esta opção não está habilitada! Mas você pode bloquear o tráfego para portas não criptografadas.
# Esta opção não é recomendada se você estiver usando serviços ocultos (sites da deepweb), mas se você não acessará serviços ocultos e não
# usará este script para fins de teste de penetração, você pode habilitá-la.
# Por favor, esteja ciente de que muitos sites e scripts java ainda enviam dados não criptografados usando a porta 80. Ao habilitar esta opção
# você só enviará e receberá dados usando portas criptografadas. Todos os dados enviados ou recebidos em portas não criptografadas serão descartados.
# É uma boa abordagem de segurança, mas pode quebrar a funcionalidade de muitos sites e scripts que só enviam dados não criptografados.
# É recomendado incluir a porta 80 nesta lista.
RejectPlaintextPorts="21,23,25,109,110,143"

#	AvisarPortasTextoSimples					 --> Diz ao Tor para emitir avisos sempre que o usuário tentar fazer uma conexão anônima para uma dessas portas.
#            Esta opção é projetada para alertar os usuários sobre serviços que arriscam enviar nome de usuário e senhas em texto claro.
#            (Padrão TOR é: 23,109,110,143)
#            Sugestão: Esta opção não bloqueará! Mas incluirá uma mensagem de "aviso" dentro do arquivo de LOG do TOR, sobre dados sendo enviados usando
# portas não criptografadas. Pode ser usado para detectar se um site específico está enviando dados não criptografados.
#AvisarPortasTextoSimples="21,23,25,80,109,110,143"

#	TempoLimiteConstrucaoCircuito 		 --> Tenta por no máximo NUM segundos ao construir circuitos. Se o circuito não estiver aberto nesse tempo, desista dele.
#             (O Padrão TOR é 60 segundos)
CircuitBuildTimeout="60"


#	TempoLimiteCircuitoDisponivel NUM
#           O Tor tentará manter pelo menos um circuito aberto e não utilizado disponível por este período de tempo. Esta opção governa quanto tempo circuitos
#           ociosos são mantidos abertos, assim como o tempo que o Tor manterá um circuito aberto para cada uma das portas recentemente usadas. Desta forma quando
#           o cliente Tor estiver totalmente ocioso, ele pode expirar todos os seus circuitos, e então expirar suas conexões TLS. Note que o valor real do
#           timeout é randomizado uniformemente do valor especificado até o dobro desse valor. (Padrão: 30 minutos; Máx: 24 horas)
# Sugestão: Não defina um número muito longo (em segundos).
CircuitsAvailableTimeout="1500"

#	AprenderTempoLimiteConstrucaoCircuito 0|1 --> Se 0, o aprendizado adaptativo de TempoLimiteConstrucaoCircuito é desabilitado.
#             Se AprenderTempoLimiteConstrucaoCircuito é 1, este valor de 'TempoLimiteConstrucaoCircuito' serve como o valor
#             inicial a usar antes que um timeout seja aprendido.
#             Se AprenderTempoLimiteConstrucaoCircuito é 0, este valor é o único valor usado.
#             ( O Padrão TOR: 1)
#             Sugestão: Defina como 0(zero) para forçar apenas os circuitos TOR rápidos. No caso de usar uma internet lenta use 1.
LearnCircuitBuildTimeout="1"


#	TempoLimiteFluxoCircuito		 --> Se não-zero, esta opção substitui o cronograma interno de timeout do TOR para quantos segundos
#             até desanexarmos um fluxo de um circuito e tentarmos um novo circuito.
#             Se sua rede é particularmente lenta, você pode querer definir isto para um número como 60.
#             (Padrão TOR é: 0)
#             Sugestão: O timeout padrão de fluxo do TOR é 30 segundos.
#			  Em resumo, ao definir um número menor que 30, você está tentando forçar apenas os circuitos TOR rápidos.
#			  Não defina menor que 10 segundos, porque você terá problemas para encontrar circuitos válidos.
#
#           	 Você pode deixar esta opção como PADRÃO TOR porque este script realiza um ótimo balanceamento de carga entre as instâncias TOR.
#		 Então tente executar mais instâncias e você pode manter este número entre 10 e 30. Desta forma, você terá mais estabilidade em sua conexão.
CircuitStreamTimeout="0"

#	ApenasCliente					 --> Se definido como 1, o Tor não funcionará como um relay ou atenderá requisições de diretório.
#             (Padrão TOR é: 0)
#             Sugestão: Se você tem uma conexão lenta de internet, defina como 1. A ideia é tentar economizar banda não servindo como relay.
#             Também não estou definindo as opções 'PortaOR', 'PortaExtOR' e 'PortaDir' que estão relacionadas com os recursos de relay do TOR.
#
ClientOnly="1"

#	PreenchimentoConexao			 --> Esta opção governa o uso de preenchimento pelo Tor para se defender contra algumas formas de análise de tráfego.
#             Se for definido como auto, o Tor enviará preenchimento apenas se tanto o cliente quanto o relay suportarem.
#             Se for definido como 0, o Tor não enviará nenhuma célula de preenchimento. Se for definido como 1, o Tor ainda enviará preenchimento para
#             conexões de clientes independentemente do suporte do relay.
#             (Padrão TOR é: auto)
ConnectionPadding="1"

#	PreenchimentoConexaoReduzido 0|1 --> Se definido como 1, o TOR não manterá conexões OR abertas por muito tempo, e enviará menos preenchimento nessas conexões.
#             (Padrão TOR é: 0)
#             Sugestão: Defina como 1 porque a ideia principal deste script não é manter as conexões abertas por muito tempo.
ReducedConnectionPadding="1"

#	ExcluirGeoIPDesconhecido	0|1|auto -->  Se esta opção for definida como auto, então sempre que qualquer código de país for definido em ExcluirNós ou ExcluirNósSaída, todos
#              os nós com país desconhecido ({??} e possivelmente {A1}) serão tratados como excluídos também.
#              Se esta opção for definida como 1, então todos os países desconhecidos serão tratados como excluídos em ExcluirNós e ExcluirNósSaída.
#              Esta opção não tem efeito quando um arquivo GeoIP não está configurado ou não pode ser encontrado.
#              (Padrão TOR é: auto)
#              Sugestão: Defina como 1
GeoIPExcludeUnknown="1"

#	NósEstritos 0|1				 --> Se NósEstritos for definido como 1, o Tor tratará a opção ExcluirNós como um requisito a seguir
#             para todos os circuitos que você gerar, mesmo que isso quebre funcionalidades para você
#             (NósEstritos não se aplica a ExcluirNósSaída nem a NósSaída).
#             Se NósEstritos for definido como 0, o Tor ainda tentará evitar nós na lista ExcluirNós,
#             mas errará para evitar erros inesperados. Especificamente, NósEstritos 0 diz ao TOR que
#             está ok usar um nó excluído quando for necessário realizar auto-testes de alcance de relay,
#             conectar a um serviço oculto, fornecer um serviço oculto a um cliente, cumprir uma requisição .exit, enviar
#             informações de diretório, ou baixar informações de diretório.
#             (Padrão TOR é: 0)
#			  Sugestão: Mantenha como 1 se você estiver preocupado com sua segurança.
#				      Se você estiver executando o modo VELOCIDADE, é sugerido mudar este valor para 0.
StrictNodes="1"

#	FirewallFascista 0|1			 --> Se 1, o Tor só criará conexões de saída para ORs rodando em portas que seu firewall
#             permite (padrão é 80 e 443; veja PortasFirewall).
#             Isso permitirá que você execute o Tor como um cliente atrás de um firewall com políticas restritivas.
#             (Padrão TOR é:0)
#             Sugestão: Apenas se você precisar executar este script em um ambiente restrito, defina como 1.
#
FascistFirewall="0"

#	PortasFirewall PORTAS			 --> Uma lista de portas que seu firewall permite que você conecte. Apenas usado quando FirewallFascista está definido.
#             Esta opção está obsoleta; use EndereçosAlcançáveis em vez disso. (Padrão: 80, 443)
FirewallPorts="443"

#	PortasVidaLonga				 --> Uma lista de portas para serviços que tendem a ter conexões de longa duração (ex. chat e shells interativos).
#             Circuitos para fluxos que usam estas portas conterão apenas nós com alto tempo de atividade, para reduzir a chance que
#             um nó saia antes que o fluxo seja finalizado. Note que a lista também é honrada para
#             circuitos (tanto do lado do cliente quanto do serviço) envolvendo serviços ocultos cuja porta virtual está nesta lista.
#             (Padrão TOR é: 21, 22, 706, 1863, 5050, 5190, 5222, 5223, 6523, 6667, 6697, 8300)
LongLivedPorts="22"

#	PeriodoNovoCircuito			 --> A cada NUM segundos considere construir um novo circuito.
#             (Padrão TOR é: 30 segundos)
NewCircuitPeriod="15"

#	TempoMaximoCircuitoSujo			 --> Sinta-se livre para reutilizar um circuito que foi usado pela primeira vez no máximo NUM segundos atrás, mas nunca anexe um
#             novo fluxo a um circuito que é muito velho. Para serviços ocultos, isto se aplica à última vez que um circuito foi usado,
#             não a primeira. Circuitos com fluxos construídos com autenticação SOCKS via PortasSOCKS que têm
#             ManterVivoIsolarAutenticacaoSOCKS também permanecem vivos por TempoMaximoCircuitoSujo segundos após carregar o último fluxo.
#             (Padrão TOR é: 10 minutos (600 segundos))
#             O menor valor suportado é 10 segundos. Mesmo se você tentar definir um valor abaixo de 10 segundos o TOR ajustará automaticamente
#             e retornará para 10.
#             Para evitar um padrão, e evitar que todas as instâncias TOR em execução mudem o circuito ao mesmo tempo,
#             este script está usando um valor aleatório entre 10 e o número que você definir nesta opção.
#             O TOR usará este valor como o intervalo das mudanças automáticas de circuito.
# Sugestão: TempoMaximoCircuitoSujo="15"
MaxCircuitDirtiness="15"

#	MaximoCircuitosClientePendentes	 --> Não permita mais que NUM circuitos estejam pendentes de cada vez para lidar com fluxos de clientes.
#             Um circuito está pendente se começamos a construí-lo, mas ele ainda não foi completamente construído.
#             (Padrão TOR é: 32)
#             Sugestão: 1024 é o máximo suportado. A ideia é sempre ter circuitos disponíveis porque o script força um novo circuito a cada 10 segundos.
MaxClientCircuitsPending="1024"

#	TempoLimiteSOCKS				 --> Deixe uma conexão SOCKS esperar NUM segundos no handshake, e NUM segundos desanexada esperando por um circuito apropriado,
#             antes de falharmos.
#             (Padrão TOR é: 2 minutos)
SocksTimeout="${MINIMUM_TIMEOUT}"

#	ExpirarRastreamentoHostSaida		 --> Como servidores de saída ficam online e offline, é desejável expirar a associação entre host e servidor de saída após NUM
#             segundos. O padrão é 1800 segundos (30 minutos).
#             Sugestão: 10
TrackHostExitsExpire="120"

#	UsarGuardsEntrada 0|1			 --> Se esta opção for definida como 1, escolhemos alguns servidores de entrada de longo prazo, e tentamos ficar com eles.
#             Isso é desejável porque mudar constantemente de servidores aumenta as chances de um adversário que possui alguns servidores
#             observar uma fração de seus caminhos. Guards de Entrada não podem ser usados por Autoridades de Diretório, Serviços de Cebola Única, e
#             clientes Tor2web. Nestes casos, esta opção é ignorada.
#             (Padrão TOR é: 1)
#             Sugestão: MANTENHA COMO 1!!!
UseEntryGuards="1"


#	NumeroGuardsEntrada NUM
#           Se UsarGuardsEntrada for definido como 1, tentaremos escolher um total de NUM roteadores como entradas de longo prazo para nossos circuitos. Se NUM for 0, tentamos
#           aprender o número do parâmetro de consenso guard-n-primary-guards-to-use, e padrão para 1 se o parâmetro de consenso não estiver definido.
#           (Padrão: 0)
#			Sugestão: Mantenha 1 para ter o número máximo de Guards de Entrada.
NumEntryGuards="0"


#	SOCKSseguro 0|1				 --> Quando esta opção está habilitada, o Tor rejeitará conexões de aplicações que usam variantes inseguras do protocolo socks
#             aquelas que só fornecem um endereço IP, significando que a aplicação está fazendo uma resolução DNS primeiro. Especificamente, estes são
#             socks4 e socks5 quando não fazendo DNS remoto.
#             (Padrão TOR é: 0)
#             Sugestão: MANTENHA COMO 1 para evitar vazamento de DNS!
SafeSocks="1"

#TestarSOCKS 0|1
#           Quando esta opção está habilitada, o Tor fará uma entrada de log de nível notice para cada conexão na porta SOCKS indicando se a
#           requisição usou um protocolo SOCKS seguro ou inseguro (veja entrada acima em SOCKSseguro). Isso ajuda a determinar se uma aplicação
#           usando Tor está possivelmente vazando requisições DNS. (Padrão: 0)
TestSocks="0"

#	PermitirNomesHostNaoRFC953 0|1	 --> Quando esta opção está desabilitada, o Tor bloqueará nomes de host contendo caracteres ilegais (como @ e :) em vez de enviá-los
#             para um nó de saída para serem resolvidos. Isso ajuda a capturar tentativas acidentais de resolver URLs e assim por diante.
#             (Padrão TOR é: 0)
#             Sugestão: Mantenha com valor 0 por razões de segurança!
AllowNonRFC953Hostnames="0"

#	ClienteRejeitarEnderecosInternos 0|1	 --> Se verdadeiro, o Tor não tentará cumprir requisições para conectar a um endereço interno (como 127.0.0.1 ou 192.168.0.1)
#            a menos que um nó de saída seja especificamente requisitado (por exemplo, via um hostname .exit, ou uma requisição do controlador).
#            Se verdadeiro, nomes de host multicast DNS para máquinas na rede local (da forma *.local) também são rejeitados.
#            (Padrão TOR é: 1)
ClientRejectInternalAddresses="1"

#	BaixarInfoExtra 0|1				 --> Se verdadeiro, o Tor baixa e armazena em cache documentos "extra-info". Estes documentos contêm informações sobre servidores
#            além das informações em seus descritores de servidor regulares. O Tor não usa esta informação para nada
#            ele mesmo; para economizar banda, deixe esta opção desligada.
#            (Padrão TOR é: 0)
DownloadExtraInfo="0"

#DadosOtimistas 0|1|auto
#           Quando esta opção é definida, e o Tor está usando um nó de saída que suporta o recurso, ele tentará otimisticamente enviar dados para o nó
#           de saída sem esperar que o nó de saída reporte se a conexão teve sucesso. Isso pode economizar um tempo de ida e volta para protocolos como
#           HTTP onde o cliente fala primeiro. Se DadosOtimistas for definido como auto, o Tor verificará o parâmetro UseOptimisticData no
#           networkstatus. (Padrão: auto)
OptimisticData="1"


#SufixosMapeamentoAutomaticoHosts SUFIXO,SUFIXO,...
#           Uma lista separada por vírgulas de sufixos para usar com MapeamentoAutomaticoHostsAoResolver. O sufixo "."
#           é equivalente a "todos os endereços". (Padrão: .exit,.onion).
AutomapHostsSuffixes=".exit,.onion"

# Nível 2: TEMPO_LIMITE_PRIVOXY 		 --> Define o tempo limite para o PRIVOXY.
#             Estou usando PRIVOXY para fazer a interface entre o HTTP(Camada 7 OSI) e o SOCKS5 aberto do TOR(Camada 5 OSI).
#             Sugestão: 13 segundos para um bom desempenho e tolerância.
#           	 Se o circuito TOR estiver lento, o PRIVOXY não enviará a requisição usando ele.
#             PS: Adicione 1 segundo extra do TempoLimiteFluxoCircuito do TOR para ter tempo de ler toda a resposta SOCKS do TOR.
#TEMPO_LIMITE_PRIVOXY="$((TempoLimiteFluxoCircuito + TEMPO_MINIMO))"
PRIVOXY_TIMEOUT="${MINIMUM_TIMEOUT}"

# Camada 3: TEMPO_LIMITE_PROXY_MASTER		--> O tempo limite do HAPROXY (Proxy Mestre). Este é o proxy que você define no seu navegador web.
#            	Este proxy lida com todos os PROXIES_DE_PAÍSES realizando o balanceamento de carga, fail over e roundrobin.
#TEMPO_LIMITE_SERVIDOR_PROXY_MASTER="$((TempoLimiteFluxoCircuito + TEMPO_MINIMO))"
MASTER_PROXY_SERVER_TIMEOUT="${MINIMUM_TIMEOUT}"
#TEMPO_LIMITE_CLIENTE_PROXY_MASTER="$((TENTATIVAS * TEMPO_LIMITE_SERVIDOR_PROXY_MASTER * PAISES))"
MASTER_PROXY_CLIENT_TIMEOUT="60"
#############################################################################################################

######################################
######## NÃO MUDE ESTES! ########
######################################
#O Script irá configurar por si mesmo.

#Instâncias
TOR_START_INSTANCE=0
TOR_CURRENT_INSTANCE=${TOR_START_INSTANCE}

#Porta_SOCKS
TOR_CURRENT_SOCKS_PORT=${START_SOCKS_PORT}

#Porta_HTTP
TOR_CURRENT_HTTP_PORT=${TOR_START_HTTP_PORT}

#Porta_Controle
TOR_CURRENT_CONTROL_PORT=${START_CONTROL_PORT}

#Porta Proxy Transparente
TOR_CURRENT_TransPort=${TOR_START_TransPort}

#Porta Proxy Privoxy
PRIVOXY_CURRENT_PORT=${PRIVOXY_START_PORT}

#Contador de Instância Atual
COUNT_CURRENT_INSTANCE=0

#PortaDNS
DNSPORT=${START_DNS_PORT}

#Família do Nó
NodeFamily=""

SPOOFED_USER_AGENT=$(echo "${TOR_BROWNSER_USER_AGENT}" | sed 's/ /\\ /g')
######################################